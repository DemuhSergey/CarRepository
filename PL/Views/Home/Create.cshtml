@model PL.Models.CarViewModel

@{
    ViewBag.Title = "Добавить машину";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Create", "Home", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        <div class="control-label col-md-2">
            @Html.LabelFor(model => model.MarkName)
        </div>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MarkName, ViewBag.Marks as SelectList, " Select mark ", new {@class = "form-control"})
        </div>
    </div>
    
    <div class="form-group">
        <div class="control-label col-md-2">
            @Html.LabelFor(model => model.ModelName)
        </div>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ModelName, new SelectList(" "), " Select model ", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">
            @Html.LabelFor(model => model.Valume)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Valume, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Valume, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">
            @Html.LabelFor(model => model.Color)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">
            @Html.LabelFor(model => model.Transmission)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Transmission, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Transmission, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        <div class="control-label col-md-2">
            @Html.LabelFor(model => model.Image)
        </div>
        <div class="col-md-10">
            <input type="file" name="uploadImage" class="btn btn-default" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
</div>
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    $(document).ready(function () {
        $("#MarkName").change(function() {
            $.get("/Home/GetModelsByMarkName",
                { MarkName: $("#MarkName").val() },
                function(data) {
                    $("#ModelName").empty();
                    $.each(data,
                        function(index, row) {
                            $("#ModelName").append("<option value='" + row.Name + "'>" + row.Name + "</option>")
                        });
                });
        });
    });
</script>